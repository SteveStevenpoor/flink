<?xml version="1.0" ?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<Root>
	<TestCase name="testInnerJoinChain">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 JOIN T3 on T2.c = T3.f JOIN T1 ON T1.a = T2.c]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($5, $0)], joinType=[inner])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- FlinkMultiJoinNode(joinFilter=[AND(=($0, $3), =($5, $0))], joinTypes=[[INNER, INNER]], joinConditions=[[=($0, $3), =($5, $0)]], commonJoinKeys=[[T2.c]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testInnerJoinChainComplexCondition">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 JOIN T3 on T2.c = T3.f JOIN T1 ON T1.a = T2.c AND T1.b = T2.d]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[AND(=($5, $0), =($6, $1))], joinType=[inner])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- FlinkMultiJoinNode(joinFilter=[AND(=($0, $3), =($5, $0), =($6, $1))], joinTypes=[[INNER, INNER]], joinConditions=[[=($0, $3), AND(=($5, $0), =($6, $1))]], commonJoinKeys=[[T2.c]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testInnerJoinChainNoCommonJoinKey">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 JOIN T3 on T2.c = T3.f JOIN T1 ON T1.b = T2.d]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($6, $1)], joinType=[inner])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($6, $1)], joinType=[inner])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testLeftInnerJoinChain">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 LEFT JOIN T3 on T2.c = T3.f JOIN T1 ON T1.a = T2.c]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($5, $0)], joinType=[inner])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[left])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- FlinkMultiJoinNode(joinFilter=[AND(=($0, $3), =($5, $0))], joinTypes=[[LEFT, INNER]], joinConditions=[[=($0, $3), =($5, $0)]], commonJoinKeys=[[T2.c]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testLeftLeftJoinChain">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 LEFT JOIN T3 on T2.c = T3.f LEFT JOIN T1 ON T1.a = T2.c]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($5, $0)], joinType=[left])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[left])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- FlinkMultiJoinNode(joinFilter=[AND(=($0, $3), =($5, $0))], joinTypes=[[LEFT, LEFT]], joinConditions=[[=($0, $3), =($5, $0)]], commonJoinKeys=[[T2.c]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testRightInnerJoinChain">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 RIGHT JOIN T3 on T2.c = T3.f INNER JOIN T1 ON T1.a = T2.c]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($5, $0)], joinType=[inner])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[right])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalProject(c=[$2], d=[$3], e=[$4], f=[$0], g=[$1], a=[$5], b=[$6])
   +- FlinkMultiJoinNode(joinFilter=[AND(=($2, $0), =($5, $2))], joinTypes=[[LEFT, INNER]], joinConditions=[[=($2, $0), =($5, $2)]], commonJoinKeys=[[T2.c]])
      :- LogicalTableScan(table=[[default_catalog, default_database, T3]])
      :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testRightRightJoinChain">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 RIGHT JOIN T3 on T2.c = T3.f RIGHT JOIN T1 ON T1.a = T2.c]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($5, $0)], joinType=[right])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[right])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalProject(c=[$2], d=[$3], e=[$4], f=[$5], g=[$6], a=[$0], b=[$1])
   +- LogicalProject(a=[$0], b=[$1], c=[$4], d=[$5], e=[$6], f=[$2], g=[$3])
      +- FlinkMultiJoinNode(joinFilter=[AND(=($4, $2), =($0, $4))], joinTypes=[[LEFT, LEFT]], joinConditions=[[=($4, $2), =($0, $4)]], commonJoinKeys=[[T2.c]])
         :- LogicalTableScan(table=[[default_catalog, default_database, T1]])
         :- LogicalTableScan(table=[[default_catalog, default_database, T3]])
         +- LogicalTableScan(table=[[default_catalog, default_database, T2]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testRightLeftJoinChain">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 RIGHT JOIN T3 on T2.c = T3.f LEFT JOIN T1 ON T1.a = T2.c]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($5, $0)], joinType=[left])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[right])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalProject(c=[$2], d=[$3], e=[$4], f=[$0], g=[$1], a=[$5], b=[$6])
   +- FlinkMultiJoinNode(joinFilter=[AND(=($2, $0), =($5, $2))], joinTypes=[[LEFT, LEFT]], joinConditions=[[=($2, $0), =($5, $2)]], commonJoinKeys=[[T2.c]])
      :- LogicalTableScan(table=[[default_catalog, default_database, T3]])
      :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testInnerRightJoinChain">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 INNER JOIN T3 on T2.c = T3.f RIGHT JOIN T1 ON T1.a = T2.c]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalJoin(condition=[=($5, $0)], joinType=[right])
   :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6])
+- LogicalProject(c=[$2], d=[$3], e=[$4], f=[$5], g=[$6], a=[$0], b=[$1])
   +- FlinkMultiJoinNode(joinFilter=[AND(=($2, $5), =($0, $2))], joinTypes=[[INNER, LEFT]], joinConditions=[[=($2, $5), =($0, $2)]], commonJoinKeys=[[T2.c]])
      :- LogicalTableScan(table=[[default_catalog, default_database, T1]])
      :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
      +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
]]>
		</Resource>
	</TestCase>

	<TestCase name="testInnerInnerInnerJoinChain">
		<Resource name="sql">
			<![CDATA[SELECT * FROM T2 INNER JOIN T3 on T2.c = T3.f INNER JOIN T1 ON T1.a = T2.c INNER JOIN T4 ON T4.h = T2.c]]>
		</Resource>
		<Resource name="ast">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6], h=[$7], i=[$8])
+- LogicalJoin(condition=[=($7, $0)], joinType=[inner])
   :- LogicalJoin(condition=[=($5, $0)], joinType=[inner])
   :  :- LogicalJoin(condition=[=($0, $3)], joinType=[inner])
   :  :  :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :  :  +- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   :  +- LogicalTableScan(table=[[default_catalog, default_database, T1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4]])
]]>
		</Resource>
		<Resource name="optimized rel plan">
			<![CDATA[
LogicalProject(c=[$0], d=[$1], e=[$2], f=[$3], g=[$4], a=[$5], b=[$6], h=[$7], i=[$8])
+- FlinkMultiJoinNode(joinFilter=[AND(=($0, $3), =($5, $0), =($7, $0))], joinTypes=[[INNER, INNER, INNER]], joinConditions=[[AND(=($0, $3), =($5, $0)), =($7, $0)]], commonJoinKeys=[[T2.c]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T2]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T3]])
   :- LogicalTableScan(table=[[default_catalog, default_database, T1]])
   +- LogicalTableScan(table=[[default_catalog, default_database, T4]])
]]>
		</Resource>
	</TestCase>
</Root>
